package Ver2;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.jfree.ui.RefineryUtilities;
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author SmallFour
 */
public class CFP_GUI extends javax.swing.JFrame {

    /**
     * Creates new form CFP_GUI
     */
    public CFP_GUI() throws IOException {
        initComponents();
        RefineryUtilities.centerFrameOnScreen(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setFont(new java.awt.Font("新細明體", 0, 14)); // NOI18N
        jButton1.setText("Analyze");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField1.setFont(new java.awt.Font("新細明體", 0, 14)); // NOI18N

        jTextField2.setFont(new java.awt.Font("新細明體", 0, 14)); // NOI18N

        jLabel1.setFont(new java.awt.Font("新細明體", 0, 14)); // NOI18N
        jLabel1.setText("Absolute path：");

        jLabel2.setFont(new java.awt.Font("新細明體", 0, 14)); // NOI18N
        jLabel2.setText("Method name：");

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton2.setFont(new java.awt.Font("新細明體", 0, 14)); // NOI18N
        jButton2.setText("Show information");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("新細明體", 0, 14)); // NOI18N
        jButton3.setText("Lines estimate");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("新細明體", 0, 14)); // NOI18N
        jButton4.setText("End");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        
        jButton5.setFont(new java.awt.Font("新細明體", 0, 14)); // NOI18N
        jButton5.setText("Complexity Count");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("新細明體", 0, 14)); // NOI18N
        jLabel3.setText("Absolute path請輸入欲測試之.java檔路徑，或一個包含欲測試.java檔之資料夾路徑");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 591, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(33, 33, 33)
                        .addComponent(jButton2)
                        .addGap(38, 38, 38)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(jButton5)
                        .addGap(37, 37, 37)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        
    String concentratePath = "D:\\calculate.txt";
    File tempFile = new File(concentratePath);
    BufferedWriter WriterStream;
    String currentFile = "";
    int numCurrentFile = 0;
    String excelPath = "D:\\co.xls";
    static boolean state = true;

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        String absolutePath = jTextField1.getText();
        try {
            tempFile.createNewFile();
            WriterStream = new BufferedWriter(new FileWriter(tempFile));
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "暫存檔案建立錯誤", "Error", JOptionPane.ERROR_MESSAGE);
            state = false;
        }
        if (state) {
            try {
                if (absolutePath.matches(".+.java")) {
                    try {
                        BufferedReader ReaderStream = new BufferedReader(new FileReader(absolutePath));
                        String data;
                        do {
                            data = ReaderStream.readLine();
                            if (data == null) {
                                break;
                            }
                            WriterStream.write(data);
                            WriterStream.newLine();
                        } while (true);
                    } catch (IOException ex) {
                        JOptionPane.showMessageDialog(null, "新增失敗", "Error", JOptionPane.ERROR_MESSAGE);
                        state = false;
                    }
                } else {
                    new CFP_GUI().search(absolutePath, WriterStream);
                }
                WriterStream.close();
            } catch (IOException ex) {
            }
        }
        if (state) {
            String methodName = jTextField2.getText() + "(.*)";
            Countcfp ccfp = new Countcfp(concentratePath);
            try {
            	CyclomaticComplexity cc=new CyclomaticComplexity();
            	cc.CyclomaticComplexity("E:\\Dropbox\\Dropbox\\課業\\國科會功能點\\CFPv2\\src");//填入整個pacakage的資料夾位置
                System.out.println("aa");
                ccfp.start_count(methodName); 
                System.out.println("bb");
                double cfp = ccfp.getTotalCfp();
                System.out.println("cfp:"+cfp);
                System.out.println("--cc--");
                int cfpInt = (int) cfp + (((int) (cfp * 10)) % 10 >= 5 ? 1 : 0); //四捨五入至個位數
                jTextArea1.setText("");
                jTextArea1.append(ccfp.show_detail()); //show出細節
                jTextArea1.append("---\n以方法" + methodName + "為起點之功能點數為" + cfpInt);
                JOptionPane.showMessageDialog(null, "功能點計算完畢");
                int linesCount = (int) ccfp.total_lines();
                Regression excel = new Regression(excelPath);
                excel.addData(cfpInt, linesCount);
            } catch (Exception ex) {
                System.out.println(ex);
                JOptionPane.showMessageDialog(null, "無此方法", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        tempFile.delete();
        jTextField1.setText("");
        jTextField2.setText("");
        state = true;
    }                                        

    private void search(String absolutePath, BufferedWriter br) {
        if (state) {
            File folder = new File(absolutePath);
            String[] list = folder.list();
            try {
                String z = "";
                for (int i = 0; i < list.length; i++) {
                    z = absolutePath + "\\" + list[i];
                    folder = new File(z);
                    if (folder.isDirectory()) {
                        search(z, br);
                    } else if (folder.getName().matches(".+.java")) {
                        try {
                            BufferedReader ReaderStream = new BufferedReader(new FileReader(z));
                            String data;
                            do {
                                data = ReaderStream.readLine();
                                if (data == null) {
                                    break;
                                }
                                br.write(data);
                                br.newLine();
                            } while (true);
                        } catch (IOException ex) {
                            JOptionPane.showMessageDialog(null, "新增失敗", "Error", JOptionPane.ERROR_MESSAGE);
                            state = false;
                        }
                    } else {
                        z = folder.getParent();
                    }
                }
                z = new File(z).getParent();
            } catch (NullPointerException ex) {
                JOptionPane.showMessageDialog(null, "路徑輸入錯誤", "Error", JOptionPane.ERROR_MESSAGE);
                state = false;
            }
        }
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        if (!new File(excelPath).exists()) {
            JOptionPane.showMessageDialog(null, "沒有統計資料", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                Process p = Runtime.getRuntime().exec("cmd.exe /C" + excelPath);
            } catch (IOException ex) {
            }
            Scatter scat = new Scatter("");
            double enough = scat.show(scat);
            if (String.valueOf(enough).equals("NaN")) {
                JOptionPane.showMessageDialog(null, "統計資料不足", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }                                        

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        if (!new File(excelPath).exists()) {
            JOptionPane.showMessageDialog(null, "沒有統計資料，無法計算", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            String inputPoint = JOptionPane.showInputDialog("請輸入功能點數：");
            if (inputPoint == null) {
            } else {
                Scatter scat = new Scatter("");
                try {
                    if (Integer.valueOf(inputPoint) > 0) {
                        int outputLines = 0;
                        outputLines = scat.estimate(Integer.valueOf(inputPoint));
                        if (outputLines == 0) {
                            JOptionPane.showMessageDialog(null, "統計資料不足，無法計算", "Error", JOptionPane.ERROR_MESSAGE);
                        } else {
                            JOptionPane.showMessageDialog(null, "預估行數為 " + outputLines + " 行");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "輸入整數需大於零", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(null, "必須輸入整數", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }                                        

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        //確保未執行完分析，仍能順利將檔案刪除
        if (tempFile.exists()) {
            try {
                WriterStream.close();
            } catch (NullPointerException | IOException ex) {
            }
            tempFile.delete();
        }
        JOptionPane.showMessageDialog(null, "歡迎下次再來");
        System.exit(0);
    }
    
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    	try{
    	jTextArea1.setText("");
    	String packagePath = jTextField1.getText();
    	if(packagePath.equals("")){
    		JOptionPane.showMessageDialog(null, "未輸入目標路徑", "Error", JOptionPane.ERROR_MESSAGE);
    		state=false;
    	}
    	if(state){
    	CyclomaticComplexity cc = new CyclomaticComplexity();
    	cc.CyclomaticComplexity(packagePath);
    	}
    	}catch(Exception e){
    		System.out.println(e);
    		JOptionPane.showMessageDialog(null, "無此路徑", "Error", JOptionPane.ERROR_MESSAGE);
    	}
        jTextField1.setText("");
        jTextField2.setText("");
        
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
    	/* Set the Nimbus look and feel */
    	//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    	/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CFP_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* 
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    //final CFP_GUI start = new CFP_GUI();
                    new CFP_GUI().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(CFP_GUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration                   
}
